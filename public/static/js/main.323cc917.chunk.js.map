{"version":3,"sources":["utilities/mapStateToProp.ts","components/Button/Button.tsx","components/AddBody/AddBody.tsx","utilities/linkGenerator.ts","utilities/eraseAll.ts","components/Loading/Loading.tsx","utilities/looper.ts","utilities/compareAndKeep.ts","utilities/multipleStoreCommits.ts","pages/Add/Add.tsx","pages/Settings/Settings.tsx","pages/About/About.tsx","utilities/dbOpener.ts","utilities/dbReader.ts","utilities/dbWriter.ts","components/TogglingCard/TogglingCard.tsx","utilities/uniqueIndex.ts","utilities/subscriptionFilter.ts","utilities/removeIndexesFromArray.ts","App.tsx","components/Navbar/Navbar.tsx","components/ErrorMessage/ErrorMessage.tsx","pages/ErrorPage/ErrorPage.tsx","components/InfoToggler/InfoToggler.tsx","utilities/isArraysEqual.ts","pages/Selector/Selector.tsx","pages/FinalStep/FinalStep.tsx","modules/addKeyword.ts","modules/addTitles.ts","modules/showLoader.ts","modules/stepCounter.ts","modules/addDescriptions.ts","modules/addThumbnailLinks.ts","modules/errorToggler.ts","modules/currentlySelected.ts","modules/requestLink.ts","modules/addAdditionalInfo.ts","modules/addSubscriptions.ts","modules/addVideoPublishDates.ts","modules/addVideoIds.ts","store.js","registerServiceWorker.ts","index.tsx"],"names":["mapStateToProps","state","store","components_Button_Button","props","expadedButton","react","className","buttonMessage","react_fontawesome_index_es","icon","buttonIcon","components_AddBody_AddBody","instruction","inputTextId","useCase","mainText","id","type","placeholder","inputFieldText","onClick","refToThis","submitter","index_es","utilities_linkGenerator","obj","options","key","part","forUsername","playlistId","maxResults","link","keys","Object","keys_1","tslib_es6","keys_1_1","next","done","value","console","log","utilities_eraseAll","scene","dispatch","components_Loading_Loading","utilities_looper","toLoopBig","toLoopSmall","indexOfMatched","forEach","partOfBig","index","split","word","partOfSmall","lowerCasedPartOfSmall","toLocaleLowerCase","push","utilities_compareAndKeep","passed","toCompareWith","source","keep","toCompareWith_1","toCompareWith_1_1","combinedUniqueIndex","utilities_multipleStoreCommits","_c","arrayToCommit","_d","thing","refToDispatcher","_b","commitName","Add_Add","_super","Add","_this","call","this","inputRef","document","getElementById","currentStep","stepCounter","inputData","inputLinkParts","trim","length","style","borderColor","boxShadow","display","ytId","firstLink","fetch","then","firstLinkResponse","json","firstLinkData","items","snippet","thumbnails","default","url","channelLogoLink","contentDetails","relatedPlaylists","uploads","secondLink_1","secondLinkResponse","secondLinkData","lookedUpToThisVideoTag","resourceId","videoId","action","channelName","channelTitle","channelTag","channelId","playlistID","videoInfoArray","descriptions","thumbnailLinks","titles","videoIds","videoPublishDates","response","title","description","medium","publishedAt","publishDates","videoPublishDate","date","substring","nextPageToken","dates","catch","why","reason","subscriptionWords","trimmedSubscriptionWords_1","_a","addTitles","addDescriptions","addThumbnailLinks","addVideoIds","addVideoPublishDates","keyword","indexByTitle","indexByDescription","uniqueIndexByTitle","Set","uniqueIndexByDescription","combinedUniqueIndexes","keepTheseTitles","keepTheseDescriptions","keepTheseThumbnailLinks","keepTheseVideoIds","keepTheseVideoPublishDates","bind","prototype","componentDidMount","refToButton","getElementsByClassName","addEventListener","event","keyCode","preventDefault","click","componentWillUnmount","render","renderThis","showLoader","Redirect","to","errorToggler","pages_Add_Add","es","Settings_Settings_Settings","Settings","pages_Settings_Settings","pages_About_About","dbOpener","esm","upgrade","db","oldVerNum","newVerNum","tx","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","utilities_dbReader","refToDB","objectStore","sent","transaction","data","get","getAll","err_1","utilities_dbWriter","objStorName","objToWrite","reference","put","components_TogglingCard_TogglingCard","itemsJSX","e","hoverDivRef","target","tagName","parentNode","classList","childNodes","filter","window","open","videoLinks","src","videoThumbnailLinks","videoUploadTimes","deletor","subscriptionPart","previousSibling","togglingFunction","utilities_uniqueIndex","para","unique","count","cloneIndex","element","val","undefined","subscriptionFilter","boolNestedArr","dataArr","nestedArr","outerIndex","decision","innerIndex","utilities_removeIndexesFromArray","array","indexesToRemove","removedArray","includes","App_App","App","videoDeleter","objStoreItemDeletor","ref","Error","subscriptions","dbWriteHelper","dbRef","objStore","apply","objStoreName","delete","thumbnailLink","addSubscriptions","toKeep","videoLinkArr","videoLinkArrIndex","vidLink","unseenVideoTitles","videoUploadTime","res","deletedCacheKeepData","areArraysEmpty","arr","subscriptionsInfo","renderThis_1","indexOfSubscription","allUnseenVideoTitles","allVideoThumbnailLinks","allVideoLinks","allVideoUploadTime","links","uploadTimes","uploadTime","uniqueAllUnseenVideoTitles","uniqueAllVideoThumbnailLinks","uniqueAllVideoLinks","uniqueAllVideoUploadTime","nodes","borderBottomLeftRadius","transform","node","maxHeight","scrollHeight","Math","random","href","src_App","components_Navbar_Navbar","location","pathname","Link","components_ErrorMessage_ErrorMessage","ErrorPage_ErrorPage","ErrorPage","pages_ErrorPage_ErrorPage","components_InfoToggler_InfoToggler","isSelected","num","toString","imgLink","utilities_isArraysEqual","arr1","arr2","sortedArr1_1","sort","sortedArr2_1","matchCount_1","Selector_Selector_Selector","Selector","helper","dbReadHelper","Number","isNaN","selectedCount","number","currentlySelected","unselected","map","newLink","requestLink","descriptions_1","thumbnailLinks_1","titles_1","videoIds_1","videoUploadTime_1","keywords","addKeyword","matchedTitlesIndex","matchedDescriptionsIndex","uniqueMatchedTitlesIndex","uniqueMatchedDescriptionsIndex","keepTheseVideoUploadTime","videoLinks_1","slice","oldSubscription","addAdditionalInfo","oldQuery","subscriptionToWrite","queryToWrite_1","details","keyWords","oldKeyWords_1","info","newKeyWords_1","queryToWrite","oldThumbnailLinksToKeep","newThumbnailLinksToKeep","err","pages_Selector_Selector","FinalStep_FinalStep_FinalStep","FinalStep","wordNodes","len","singularOrPlural","color","pages_FinalStep_FinalStep","modules_addKeyword","newState","modules_addTitles","Title","modules_showLoader","modules_stepCounter","modules_addDescriptions","Description","modules_addThumbnailLinks","ThumbnailLink","modules_errorToggler","modules_currentlySelected","modules_requestLink","modules_addAdditionalInfo","modules_addSubscriptions","newState_1","sub","modules_addVideoPublishDates","modules_addVideoIds","reducers","combineReducers","Store","createStore","__REDUX_DEVTOOLS_EXTENSION__","publicKey","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","installing","waiting","active","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","subscription","method","body","JSON","stringify","headers","content-type","onupdatefound","installingWorker","onstatechange","controller","error","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","react_dom","BrowserRouter","Route","exact","component","path","URL","origin","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.323cc917.chunk.js","sourcesContent":["export default function mapStateToProps(state: any) {\r\n  return {\r\n    store: state\r\n  };\r\n}\r\n","import * as React from 'react';\r\nimport './Button.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\ninterface IButtonProps {\r\n  expadedButton?: boolean;\r\n  buttonMessage: string;\r\n  buttonIcon: any;\r\n}\r\n\r\nconst Button: React.SFC<IButtonProps> = props => {\r\n  if (props.expadedButton) {\r\n    return (\r\n      <button className=\"expanded-button\">\r\n        {props.buttonMessage}\r\n        <span className=\"btn-logo\">\r\n          <FontAwesomeIcon icon={props.buttonIcon} />\r\n        </span>\r\n      </button>\r\n    );\r\n  }\r\n  return (\r\n    <button className=\"input-button\">\r\n      {props.buttonMessage}\r\n      <span className=\"btn-logo\">\r\n        <FontAwesomeIcon icon={props.buttonIcon} />\r\n      </span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import * as React from 'react';\r\nimport './AddBody.css';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport Button from '../Button/Button';\r\n\r\ninterface IAddBodyProps {\r\n  refToThis: any;\r\n  useCase: string;\r\n  mainText: string;\r\n  inputFieldText: string;\r\n}\r\n\r\nconst AddBody: React.SFC<IAddBodyProps> = props => {\r\n  let instruction: any;\r\n  let inputTextId: string = '';\r\n  if (props.useCase === 'link') {\r\n    instruction = (\r\n      <div className=\"instruction-container\">\r\n        <h5>Ways to get the link:</h5>\r\n        {/* <video src=\"tutorial.mp4\" /> */}\r\n        <p className=\"mini-title\">Method 1</p>\r\n        <p>\r\n          <span className=\"point-number\">1.</span> Go to YouTube and enter the homepage of the channel that you want to\r\n          subscribe\r\n        </p>\r\n        <p>\r\n          <span className=\"point-number\">2.</span> Copy the link of that page and paste it in here\r\n        </p>\r\n        <p className=\"mini-title\">Method 2</p>\r\n        <p>\r\n          <span className=\"point-number\">1.</span> Open the YouTube app and search for the channel you want to subscribe\r\n          to\r\n        </p>\r\n        <p>\r\n          <span className=\"point-number\">2.</span> Enter channel and click the share icon\r\n        </p>\r\n        <p>\r\n          <span className=\"point-number\">3.</span> Select TubeNotify on the share panel\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    inputTextId = 'input-key-word';\r\n    instruction = (\r\n      <div className=\"instruction-container\">\r\n        <div>\r\n          <h5>What is a \"keyword\"?</h5>\r\n          <p>\r\n            By the word \"keyword\" we mean a word that we will use to check if the video has your specified content. A\r\n            \"keyword\" can be a letter or a word or a sentence or even an emoji. In short, a keyword is the word which is\r\n            used to check for a match.\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <h5>Example:</h5>\r\n          <p>\r\n            If you want to get notification for Android videos from a specific channel, you'll have to use keywords\r\n            related to it such as <span>android</span>, <span>android update</span> etc.{' '}\r\n            <em>Keywords aren't case sensitive.</em>\r\n            That means the keywords <span>apple</span> and <span>Apple</span> and <span>ApPlE</span> are the same.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <h1>{props.mainText}</h1>\r\n      <input id=\"input\" className={inputTextId} type=\"text\" placeholder={props.inputFieldText} />\r\n\r\n      <div id=\"input-msg-container\">\r\n        <span id=\"input-msg\">The link you have entered is not valid!</span>\r\n      </div>\r\n\r\n      <br />\r\n      {instruction}\r\n      <div onClick={props.refToThis.submitter}>\r\n        <Button buttonIcon={faArrowRight} buttonMessage=\"Next\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBody;\r\n","interface ILinkGenerators {\r\n  type: string;\r\n  id?: string;\r\n  forUsername?: string;\r\n  playlistId?: string;\r\n  maxResults?: number;\r\n  part?: string;\r\n}\r\n\r\n/* The object that is passed to this will be processed and a link will be returned. \r\nThe object will have a type key with the value of the Youtube data api endpoint the request wil be in.\r\nAn exaple input object looks like this -\r\nconst optionsOne = {\r\n        type: `channels`,\r\n        key: `AIzaSyAcdZMDhO75zYlCi_aqRXzccVToAmQ8Quc`,\r\n        part: `snippet,contentDetails`,\r\n        id: UC-lHJZR3Gqxm24_Vd_AJ5Yw\r\n      };\r\n*/\r\n\r\nfunction linkGenerator(obj: ILinkGenerators) {\r\n  const options = {\r\n    key: `AIzaSyBV7e5CrBUqUzc1dlUVCr8vK6HpZL5h7u8`,\r\n    type: obj.type\r\n  };\r\n\r\n  options[`part`] = obj.part;\r\n\r\n  if (obj.type === `channels`) {\r\n    if ('id' in obj) {\r\n      options[`id`] = obj.id;\r\n    } else {\r\n      options[`forUsername`] = obj.forUsername;\r\n    }\r\n  }\r\n\r\n  if (obj.type === `playlistItems`) {\r\n    options[`playlistId`] = obj.playlistId;\r\n    options[`maxResults`] = obj.maxResults;\r\n  }\r\n\r\n  let link = `https://www.googleapis.com/youtube/v3/`;\r\n  link = `${link}${options.type}?`;\r\n  delete options.type;\r\n  const keys = Object.keys(options);\r\n\r\n  for (const part of keys) {\r\n    link += `${part}=${options[part]}&`;\r\n  }\r\n  console.log(link);\r\n\r\n  return link;\r\n}\r\n\r\nexport default linkGenerator;\r\n","function eraseAll(refToThis: any, scene: string) {\r\n  refToThis.props.dispatch({\r\n    type: `eraseTitles`\r\n  });\r\n\r\n  refToThis.props.dispatch({\r\n    type: `eraseDescriptions`\r\n  });\r\n\r\n  refToThis.props.dispatch({\r\n    type: `eraseThumbnailLinks`\r\n  });\r\n\r\n  refToThis.props.dispatch({\r\n    type: `eraseVideoIds`\r\n  });\r\n\r\n  refToThis.props.dispatch({\r\n    type: `eraseVideoPublishDates`\r\n  });\r\n  if (scene === 'selector') {\r\n    refToThis.props.dispatch({\r\n      type: 'eraseRequestLink'\r\n    });\r\n  }\r\n}\r\n\r\nexport default eraseAll;\r\n","import * as React from 'react';\r\nimport './Loading.css';\r\n\r\nconst Loading: React.SFC = props => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"lds-ellipsis\">\r\n        <div />\r\n        <div className=\"dotOne\" />\r\n        <div className=\"dotTwo\" />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","function looper(toLoopBig: string[], toLoopSmall: string[]) {\r\n  const indexOfMatched: number[] = [];\r\n  toLoopBig.forEach((partOfBig: string, index: number) => {\r\n    const words = partOfBig.split(` `);\r\n    words.forEach((word: string) => {\r\n      toLoopSmall.forEach((partOfSmall: string) => {\r\n        const lowerCasedPartOfSmall = partOfSmall.toLocaleLowerCase();\r\n        const lowerCasedWord = word.toLocaleLowerCase();\r\n        if (lowerCasedWord === lowerCasedPartOfSmall) {\r\n          indexOfMatched.push(index);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  return indexOfMatched;\r\n}\r\n\r\nexport default looper;\r\n","interface ICompareAndKeep {\r\n  toCompareWith: number[];\r\n  source: string[];\r\n}\r\n\r\nfunction compareAndKeep(passed: ICompareAndKeep) {\r\n  const toCompareWith = passed.toCompareWith;\r\n  const source = passed.source;\r\n  const keep: string[] = [];\r\n\r\n  for (const combinedUniqueIndex of toCompareWith) {\r\n    keep.push(source[combinedUniqueIndex]);\r\n  }\r\n\r\n  return keep;\r\n}\r\n\r\nexport default compareAndKeep;\r\n","interface IMultipleStoreCommits {\r\n  refToDispatcher: any;\r\n  arrayToCommit: string[];\r\n  commitName: string;\r\n}\r\n\r\nfunction multipleStoreCommits(passed: IMultipleStoreCommits) {\r\n  for (const thing of passed.arrayToCommit) {\r\n    passed.refToDispatcher({\r\n      [passed.commitName]: thing,\r\n      type: `add${passed.commitName}s`\r\n    });\r\n  }\r\n}\r\n\r\nexport default multipleStoreCommits;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport mapStateToProps from '../../utilities/mapStateToProp';\r\nimport AddBody from '../../components/AddBody/AddBody';\r\nimport linkGenerator from '../../utilities/linkGenerator';\r\nimport eraseAll from '../../utilities/eraseAll';\r\nimport Loading from '../../components/Loading/Loading';\r\nimport { Redirect } from 'react-router';\r\nimport looper from '../../utilities/looper';\r\nimport compareAndKeep from '../../utilities/compareAndKeep';\r\nimport multipleStoreCommits from '../../utilities/multipleStoreCommits';\r\n\r\nclass Add extends React.Component<any> {\r\n  constructor(props: any) {\r\n    super(props); // store and route is in the props\r\n\r\n    this.submitter = this.submitter.bind(this);\r\n    this.props.dispatch({\r\n      type: `stepInc`\r\n    });\r\n  }\r\n\r\n  public componentDidMount() {\r\n    const refToButton: any = document.getElementsByClassName('input-button');\r\n    const refToInputField: any = document.getElementById('input');\r\n    refToInputField.addEventListener('keyup', (event: any) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        refToButton[0].click();\r\n      }\r\n    });\r\n    // if (this.props.store.stepCounter === 2) {\r\n    //   const refToInputFieldForKeyWord: any = document.getElementsByClassName('input-key-word')[0];\r\n\r\n    //   refToInputFieldForKeyWord.addEventListener('keyup', (event: any) => {\r\n    //     if (event.keyCode === 13) {\r\n    //       event.preventDefault();\r\n    //       refToButton[0].click();\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.props.store.stepCounter !== 3) {\r\n      this.props.dispatch({\r\n        type: `clearStep`\r\n      });\r\n      this.props.dispatch({\r\n        type: `hideLoader`\r\n      });\r\n      eraseAll(this, 'add');\r\n    }\r\n  }\r\n\r\n  public submitter = () => {\r\n    const inputRef = document.getElementById(`input`) as HTMLInputElement;\r\n\r\n    const currentStep = this.props.store.stepCounter;\r\n    const inputData = inputRef.value;\r\n\r\n    if (currentStep === 1) {\r\n      if (inputData !== '') {\r\n        const inputLinkParts = inputData.trim().split(`/`);\r\n        if (inputLinkParts.length === 1) {\r\n          inputRef.style.borderColor = `#ff4646`;\r\n          inputRef.style.boxShadow = '0px 0px 40px -18px #d53e3e';\r\n\r\n          const refToInputMsg = document.getElementById(`input-msg-container`) as any;\r\n          refToInputMsg.style.display = `flex`;\r\n        } else {\r\n          const ytId = inputLinkParts[inputLinkParts.length - 1];\r\n          let firstLink = '';\r\n          //tslint:disable\r\n          if (inputLinkParts[inputLinkParts.length - 2] === 'channel') {\r\n            firstLink = linkGenerator({ id: ytId, type: `channels`, part: `contentDetails, snippet` });\r\n          } else {\r\n            firstLink = linkGenerator({ forUsername: ytId, type: `channels`, part: `contentDetails, snippet` });\r\n          }\r\n\r\n          this.props.dispatch({\r\n            type: `showLoader`\r\n          });\r\n          fetch(firstLink)\r\n            .then(firstLinkResponse => {\r\n              firstLinkResponse.json().then(firstLinkData => {\r\n                console.log(firstLinkData.items[0].snippet.thumbnails.default.url);\r\n                const channelLogoLink = firstLinkData.items[0].snippet.thumbnails.default.url;\r\n                if (firstLinkData.items.length === 0) {\r\n                  this.props.dispatch({\r\n                    type: `showError`\r\n                  });\r\n                } else {\r\n                  const playlistId: string = firstLinkData.items[0].contentDetails.relatedPlaylists.uploads;\r\n                  console.log(firstLinkData);\r\n\r\n                  const secondLink = linkGenerator({\r\n                    playlistId,\r\n                    type: `playlistItems`,\r\n                    maxResults: 50,\r\n                    part: `snippet`\r\n                  });\r\n                  fetch(secondLink)\r\n                    .then(secondLinkResponse => {\r\n                      secondLinkResponse.json().then(secondLinkData => {\r\n                        console.log(secondLinkData);\r\n\r\n                        const lookedUpToThisVideoTag =\r\n                          secondLinkData.items[secondLinkData.items.length - 1].snippet.resourceId.videoId;\r\n\r\n                        this.props.dispatch({\r\n                          type: 'addAdditionalInfo',\r\n                          action: {\r\n                            channelName: secondLinkData.items[0].snippet.channelTitle,\r\n                            channelTag: secondLinkData.items[0].snippet.channelId,\r\n                            channelLogoLink: channelLogoLink,\r\n                            playlistID: secondLinkData.items[0].snippet.playlistId,\r\n                            lookedUpToThisVideoTag: lookedUpToThisVideoTag\r\n                          }\r\n                        });\r\n                        const videoInfoArray = secondLinkData.items;\r\n                        const descriptions: string[] = [];\r\n                        const thumbnailLinks: string[] = [];\r\n                        const titles: string[] = [];\r\n                        const videoIds: string[] = [];\r\n                        const videoPublishDates: string[] = [];\r\n\r\n                        videoInfoArray.forEach((response: any) => {\r\n                          titles.push(response.snippet.title);\r\n                          descriptions.push(response.snippet.description);\r\n                          thumbnailLinks.push(response.snippet.thumbnails.medium.url);\r\n                          videoIds.push(response.snippet.resourceId.videoId);\r\n                          videoPublishDates.push(response.snippet.publishedAt);\r\n                        });\r\n\r\n                        const publishDates: string[] = [];\r\n\r\n                        videoPublishDates.forEach(videoPublishDate => {\r\n                          const date = videoPublishDate.substring(0, 10);\r\n                          publishDates.push(date);\r\n                        });\r\n\r\n                        this.props.dispatch({\r\n                          type: 'requestLink',\r\n                          link: secondLink,\r\n                          nextPageToken: secondLinkData.nextPageToken\r\n                        });\r\n\r\n                        this.props.dispatch({\r\n                          type: 'addVideoIds',\r\n                          videoIds: videoIds\r\n                        });\r\n\r\n                        this.props.dispatch({\r\n                          type: 'addVideoPublishDates',\r\n                          dates: publishDates\r\n                        });\r\n\r\n                        multipleStoreCommits({\r\n                          refToDispatcher: this.props.dispatch,\r\n                          commitName: `Title`,\r\n                          arrayToCommit: titles\r\n                        });\r\n\r\n                        multipleStoreCommits({\r\n                          refToDispatcher: this.props.dispatch,\r\n                          commitName: `Description`,\r\n                          arrayToCommit: descriptions\r\n                        });\r\n\r\n                        multipleStoreCommits({\r\n                          refToDispatcher: this.props.dispatch,\r\n                          commitName: `ThumbnailLink`,\r\n                          arrayToCommit: thumbnailLinks\r\n                        });\r\n                        this.props.dispatch({\r\n                          type: `stepInc`\r\n                        });\r\n                      });\r\n                    })\r\n                    .catch(why => {\r\n                      this.props.dispatch({\r\n                        type: `showError`\r\n                      });\r\n                    });\r\n                }\r\n              });\r\n            })\r\n            .catch(reason => {\r\n              this.props.dispatch({\r\n                type: `showError`\r\n              });\r\n            });\r\n        }\r\n      } else {\r\n        inputRef.style.borderColor = `#ff4646`;\r\n        inputRef.style.boxShadow = '0px 0px 40px -18px #d53e3e';\r\n        inputRef.placeholder = `Please fill in this field`;\r\n      }\r\n    }\r\n    if (currentStep === 2) {\r\n      if (inputData === '') {\r\n        inputRef.style.borderColor = `#ff4646`;\r\n        inputRef.style.boxShadow = '0px 0px 40px -18px #d53e3e';\r\n        inputRef.placeholder = `Please fill in this field`;\r\n      } else {\r\n        const subscriptionWords = inputData.split(`,`);\r\n        const trimmedSubscriptionWords: string[] = [];\r\n        subscriptionWords.forEach(part => {\r\n          trimmedSubscriptionWords.push(part.trim());\r\n        });\r\n        const { addTitles, addDescriptions, addThumbnailLinks, addVideoIds, addVideoPublishDates } = this.props.store;\r\n        trimmedSubscriptionWords.forEach(keyword => {\r\n          this.props.dispatch({ keyword, type: 'addKeyword' });\r\n        });\r\n\r\n        const indexByTitle = looper(addTitles, trimmedSubscriptionWords);\r\n        const indexByDescription = looper(addDescriptions, trimmedSubscriptionWords);\r\n        const uniqueIndexByTitle = [...new Set(indexByTitle)];\r\n        const uniqueIndexByDescription = [...new Set(indexByDescription)];\r\n        const combinedUniqueIndexes = [...new Set([...uniqueIndexByTitle, ...uniqueIndexByDescription])];\r\n        const keepTheseTitles: string[] = compareAndKeep({\r\n          source: addTitles,\r\n          toCompareWith: combinedUniqueIndexes\r\n        });\r\n        const keepTheseDescriptions: string[] = compareAndKeep({\r\n          source: addDescriptions,\r\n          toCompareWith: combinedUniqueIndexes\r\n        });\r\n        const keepTheseThumbnailLinks: string[] = compareAndKeep({\r\n          source: addThumbnailLinks,\r\n          toCompareWith: combinedUniqueIndexes\r\n        });\r\n        const keepTheseVideoIds: string[] = compareAndKeep({\r\n          source: addVideoIds,\r\n          toCompareWith: combinedUniqueIndexes\r\n        });\r\n        const keepTheseVideoPublishDates: string[] = compareAndKeep({\r\n          source: addVideoPublishDates,\r\n          toCompareWith: combinedUniqueIndexes\r\n        });\r\n\r\n        eraseAll(this, 'add');\r\n\r\n        multipleStoreCommits({\r\n          refToDispatcher: this.props.dispatch,\r\n          commitName: `Title`,\r\n          arrayToCommit: keepTheseTitles\r\n        });\r\n\r\n        multipleStoreCommits({\r\n          refToDispatcher: this.props.dispatch,\r\n          commitName: `Description`,\r\n          arrayToCommit: keepTheseDescriptions\r\n        });\r\n\r\n        multipleStoreCommits({\r\n          refToDispatcher: this.props.dispatch,\r\n          commitName: `ThumbnailLink`,\r\n          arrayToCommit: keepTheseThumbnailLinks\r\n        });\r\n\r\n        this.props.dispatch({\r\n          type: 'addVideoIds',\r\n          videoIds: keepTheseVideoIds\r\n        });\r\n\r\n        this.props.dispatch({\r\n          type: 'addVideoPublishDates',\r\n          dates: keepTheseVideoPublishDates\r\n        });\r\n\r\n        this.props.dispatch({\r\n          type: `stepInc`\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  public render() {\r\n    let renderThis;\r\n    if (this.props.store.showLoader) {\r\n      renderThis = <Loading />;\r\n    }\r\n    if (!this.props.store.showLoader) {\r\n      renderThis = (\r\n        <AddBody\r\n          refToThis={this}\r\n          useCase=\"link\"\r\n          mainText=\"Enter the link :\"\r\n          inputFieldText=\"Type or paste your link here\"\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.props.store.stepCounter === 2) {\r\n      renderThis = (\r\n        <AddBody\r\n          refToThis={this}\r\n          useCase=\"keyword\"\r\n          mainText=\"Enter key-word :\"\r\n          inputFieldText=\"Type your key-word here\"\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.props.store.stepCounter === 3) {\r\n      renderThis = <Redirect to=\"/selector\" />;\r\n    }\r\n\r\n    if (this.props.store.errorToggler) {\r\n      renderThis = <Redirect to=\"/error\" />;\r\n    }\r\n\r\n    return renderThis;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Add);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport mapStateToProps from '../../utilities/mapStateToProp';\r\nimport './Settings.css';\r\n\r\nclass Settings extends React.Component<any> {\r\n  constructor(props: any) {\r\n    super(props); // store and route is in the props\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>\r\n          Lorem ipsum dolor, sit amet consectetur adipisicing elit. Necessitatibus tenetur consequuntur voluptatibus ut,\r\n          quisquam odit porro vel repudiandae vitae ipsum laudantium dolorem impedit, debitis natus maiores quae\r\n          consectetur totam! Accusantium!\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Settings);\r\n","import * as React from 'react';\r\nimport './About.css';\r\n\r\ninterface IAboutProps {}\r\n\r\nconst About: React.SFC<IAboutProps> = props => {\r\n  return <h1>fd</h1>;\r\n};\r\n\r\nexport default About;\r\n","import { openDB } from 'idb';\r\n\r\nconst refToDb = openDB(`TubeDB`, 1, {\r\n  upgrade(db, oldVerNum, newVerNum, tx) {\r\n    console.log(db, oldVerNum, newVerNum, tx);\r\n    if (!db.objectStoreNames.contains(`subscription`)) {\r\n      db.createObjectStore(`subscription`, {\r\n        keyPath: `channelTag`\r\n      });\r\n    }\r\n    if (!db.objectStoreNames.contains(`general`)) {\r\n      db.createObjectStore(`general`, { keyPath: 'id', autoIncrement: true });\r\n    }\r\n    if (!db.objectStoreNames.contains(`last-updated`)) {\r\n      db.createObjectStore(`last-updated`, { keyPath: 'channelTag' });\r\n    }\r\n    if (!db.objectStoreNames.contains(`query`)) {\r\n      db.createObjectStore(`query`, { keyPath: 'channelTag' });\r\n    }\r\n    if (!db.objectStoreNames.contains(`cache-history`)) {\r\n      db.createObjectStore(`cache-history`, {\r\n        keyPath: 'id',\r\n        autoIncrement: true\r\n      });\r\n    }\r\n    if (!db.objectStoreNames.contains(`cache-keep`)) {\r\n      db.createObjectStore(`cache-keep`, {\r\n        keyPath: 'id',\r\n        autoIncrement: true\r\n      });\r\n    }\r\n    if (!db.objectStoreNames.contains('setting')) {\r\n      db.createObjectStore('setting', {\r\n        keyPath: 'id',\r\n        autoIncrement: true\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\nexport default refToDb;\r\n","async function dbReader(refToDB: any, objectStore: any, id?: number) {\r\n  try {\r\n    const db = await refToDB;\r\n    const tx = db.transaction(objectStore, 'readwrite');\r\n\r\n    let data;\r\n\r\n    //tslint:disable\r\n\r\n    if (id) {\r\n      data = await tx.objectStore(objectStore).get(id);\r\n    } else {\r\n      data = await tx.objectStore(objectStore).getAll();\r\n    }\r\n\r\n    console.log(data);\r\n    return data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default dbReader;\r\n","async function dbWriter(refToDB: any, objStorName: string, objToWrite: any) {\r\n  const reference = await refToDB;\r\n  const transaction = reference.transaction(objStorName, 'readwrite');\r\n  const objectStore: any = transaction.objectStore(objStorName);\r\n  objectStore.put(objToWrite);\r\n  const status = await transaction.done;\r\n  return status;\r\n}\r\n\r\nexport default dbWriter;\r\n","import * as React from 'react';\r\nimport './TogglingCard.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface ITogglingCardProps {\r\n  title: string;\r\n  items: string[];\r\n  channelLogoLink: string;\r\n  deletor: any;\r\n  videoThumbnailLinks: string[];\r\n  togglingFunction: any;\r\n  videoLinks: string[];\r\n  videoUploadTimes: string[];\r\n  subscriptionPart: number;\r\n}\r\n\r\nconst TogglingCard: React.SFC<ITogglingCardProps> = props => {\r\n  const itemsJSX: any = [];\r\n  props.items.forEach((data: string, index: number) => {\r\n    itemsJSX.push(\r\n      <div className=\"collapsible-card-items\" key={index}>\r\n        <div\r\n          className=\"item\"\r\n          onClick={(e: any) => {\r\n            let hoverDivRef: any;\r\n            if (e.target.tagName === 'DIV') {\r\n              if (e.target.parentNode.classList[0] === 'item') {\r\n                hoverDivRef = e.target.parentNode.parentNode.childNodes[1];\r\n              } else {\r\n                console.log(e.target.parentNode.childNodes[1]);\r\n                hoverDivRef = e.target.parentNode.childNodes[1];\r\n              }\r\n            }\r\n            if (e.target.tagName === 'H3' || e.target.tagName === 'SPAN') {\r\n              console.log(e.target.parentNode.parentNode.parentNode.childNodes[1]);\r\n              hoverDivRef = e.target.parentNode.parentNode.parentNode.childNodes[1];\r\n            }\r\n            if (e.target.tagName === 'IMG') {\r\n              console.log(e.target.parentNode.parentNode.childNodes[1]);\r\n              hoverDivRef = e.target.parentNode.parentNode.childNodes[1];\r\n            }\r\n            console.log(hoverDivRef.parentNode.childNodes[0]);\r\n            hoverDivRef.parentNode.childNodes[0].style.filter = 'blur(10.5px)';\r\n            hoverDivRef.style.display = 'flex';\r\n            window.open(props.videoLinks[index], '_blank');\r\n          }}\r\n        >\r\n          <img src={props.videoThumbnailLinks[index]} />\r\n\r\n          <div className=\"collapsible-card-item-info-container\">\r\n            <h3>{data}</h3>\r\n\r\n            <span>{props.videoUploadTimes[index]}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"hover-div\">\r\n          <h1>Have you watched the video?</h1>\r\n          <div className=\"hover-div-buton-container\">\r\n            <button\r\n              onClick={() => {\r\n                props.deletor(props.videoLinks[index], props.videoThumbnailLinks[index], props.subscriptionPart);\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faCheck} />\r\n            </button>\r\n            <button\r\n              onClick={(e: any) => {\r\n                const hoverDivDisplay = e.target.parentNode.parentNode.style.display;\r\n\r\n                if (hoverDivDisplay === 'flex') {\r\n                  e.target.parentNode.parentNode.style.display = 'none';\r\n                  e.target.parentNode.parentNode.previousSibling.style.filter = '';\r\n                }\r\n              }}\r\n            >\r\n              <FontAwesomeIcon icon={faTimes} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"collapsible-card\">\r\n      <div className=\"collapsible-card-title\" onClick={props.togglingFunction}>\r\n        <img src={props.channelLogoLink} className=\"unselectable\" />\r\n\r\n        <h5>{props.title}</h5>\r\n        <FontAwesomeIcon className=\"drop-icon\" icon={faChevronDown} />\r\n      </div>\r\n      <div className=\"collapsible-card-item-container\">{itemsJSX}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TogglingCard;\r\n","function uniqueIndex(para: string[]) {\r\n  const unique = [...new Set(para)];\r\n  const count = {};\r\n  const cloneIndex: number[] = [];\r\n  para.forEach((element: string, index: number) => {\r\n    unique.forEach((val: string) => {\r\n      if (val === element) {\r\n        if (count[element] === null || count[element] === undefined) {\r\n          count[element] = 0;\r\n        } else {\r\n          count[element] += 1;\r\n        }\r\n        if (count[element] > 0) {\r\n          cloneIndex.push(index);\r\n        }\r\n      }\r\n    });\r\n  });\r\n  return cloneIndex;\r\n}\r\n\r\nexport default uniqueIndex;\r\n","export default function subscriptionFilter(boolNestedArr: any[], dataArr: any[]) {\r\n  const keep: any[] = [];\r\n\r\n  boolNestedArr.forEach((nestedArr: any[], outerIndex: number) => {\r\n    keep.push([]);\r\n    nestedArr.forEach((decision: boolean[], innerIndex: number) => {\r\n      if (decision) {\r\n        keep[outerIndex].push(dataArr[outerIndex][innerIndex]);\r\n      }\r\n    });\r\n  });\r\n\r\n  return keep;\r\n}\r\n","function removeIndexesFromArray(array: any[], indexesToRemove: any) {\r\n  const removedArray: any[] = [];\r\n  array.forEach((val, index) => {\r\n    if (!indexesToRemove.includes(index)) {\r\n      removedArray.push(val);\r\n    }\r\n  });\r\n\r\n  return removedArray;\r\n}\r\n\r\nexport default removeIndexesFromArray;\r\n","import * as React from 'react';\nimport './main.css';\nimport { connect } from 'react-redux';\nimport mapStateToProps from './utilities/mapStateToProp';\nimport refToDb from './utilities/dbOpener';\nimport dbReader from './utilities/dbReader';\nimport dbWriter from './utilities/dbWriter';\nimport TogglingCard from './components/TogglingCard/TogglingCard';\nimport uniqueIndex from './utilities/uniqueIndex';\nimport subscriptionFilter from './utilities/subscriptionFilter';\nimport removeIndexesFromArray from './utilities/removeIndexesFromArray';\n\nclass App extends React.Component<any> {\n  constructor(props: any) {\n    super(props); // store and route is in the props\n    this.videoDeleter = this.videoDeleter.bind(this);\n    this.objStoreItemDeletor = this.objStoreItemDeletor;\n    refToDb\n      .then(ref => {\n        dbReader(ref, 'subscription').then(data => {\n          if (data !== null) {\n            this.props.dispatch({\n              type: 'addSubscriptions',\n              subscriptions: data\n            });\n          } else {\n            throw new Error('Something went wrong while readind IDB!!!');\n          }\n        });\n      })\n      .catch(() => {\n        this.props.dispatch({\n          type: `showError`\n        });\n      });\n  }\n\n  public componentWillUnmount() {\n    this.props.dispatch({\n      type: 'eraseSubscriptions'\n    });\n  }\n\n  public async dbWriteHelper(dbRef: any, objStore: string, obj: any) {\n    console.log(await dbRef, obj);\n\n    try {\n      const ref = await dbRef;\n      await dbWriter(ref, objStore, obj);\n    } catch (error) {\n      this.props.dispatch({\n        type: `showError`\n      });\n    }\n  }\n\n  public async objStoreItemDeletor(dbRef: any, objStoreName: string, keyPath: string) {\n    try {\n      const ref = await dbRef;\n      await ref.transaction(objStoreName).store.delete(keyPath);\n    } catch (err) {\n      this.props.dispatch({\n        type: `showError`\n      });\n    }\n  }\n\n  public videoDeleter(link: string, thumbnailLink: string, subscriptionPart: number) {\n    const data = this.props.store.addSubscriptions[subscriptionPart];\n    // const indexToDelete: any = [];\n    console.log(this.props.store.addSubscriptions[subscriptionPart].videoLinks);\n\n    const toKeep: any[] = [];\n\n    data.videoLinks.forEach((videoLinkArr: string[], videoLinkArrIndex: number) => {\n      toKeep.push([]);\n      videoLinkArr.forEach((vidLink: string) => {\n        //tslint:disable\n        if (link === vidLink) {\n          toKeep[videoLinkArrIndex].push(false);\n        } else {\n          toKeep[videoLinkArrIndex].push(true);\n        }\n      });\n    });\n\n    console.log(toKeep);\n\n    data.unseenVideoTitles = subscriptionFilter(toKeep, data.unseenVideoTitles);\n    data.videoThumbnailLinks = subscriptionFilter(toKeep, data.videoThumbnailLinks);\n    data.videoLinks = subscriptionFilter(toKeep, data.videoLinks);\n    data.videoUploadTime = subscriptionFilter(toKeep, data.videoUploadTime);\n\n    dbReader(refToDb, 'cache-keep', 1)\n      .then(res => {\n        if (res) {\n          let deletedCacheKeepData = res.data.filter((val: string) => {\n            if (val !== thumbnailLink) {\n              console.log('b1');\n\n              return true;\n            } else {\n              console.log('b2');\n              return false;\n            }\n          });\n          this.dbWriteHelper(refToDb, 'cache-keep', { id: 1, data: deletedCacheKeepData });\n        }\n      })\n      .catch(() => {\n        this.props.dispatch({\n          type: `showError`\n        });\n      });\n\n    // Now the variable 'data' is the modified suscription that needs to be put in IDB\n\n    console.log(data.videoLinks);\n\n    let areArraysEmpty = true;\n\n    data.videoLinks.forEach((arr: string[]) => {\n      if (arr.length !== 0) {\n        areArraysEmpty = false;\n      }\n    });\n\n    console.log(areArraysEmpty);\n\n    if (areArraysEmpty) {\n      // this.objStoreItemDeletor(refToDb, 'subscription', this.props.store.addSubscriptions[subscriptionPart].channelTag);\n      // this.objStoreItemDeletor(refToDb, 'query', this.props.store.addSubscriptions[subscriptionPart].channelTag);\n      refToDb\n        .then(ref => {\n          const tx = ref.transaction(['subscription', 'query'], 'readwrite');\n          tx.objectStore('subscription').delete(this.props.store.addSubscriptions[subscriptionPart].channelTag);\n          // Don't delete queries....as the user may not have any videos right now but the user hasn't deleted the query\n          // tx.objectStore('query').delete(this.props.store.addSubscriptions[subscriptionPart].channelTag);\n          tx.done.catch(() => {\n            this.props.dispatch({\n              type: `showError`\n            });\n          });\n        })\n        .catch(() => {\n          this.props.dispatch({\n            type: `showError`\n          });\n        });\n    } else {\n      this.dbWriteHelper(refToDb, 'subscription', data);\n    }\n\n    if (!this.props.store.showLoader) {\n      this.props.dispatch({\n        type: 'showLoader'\n      });\n      this.props.dispatch({\n        type: 'hideLoader'\n      });\n    } else {\n      this.props.dispatch({\n        type: 'showLoader'\n      });\n      this.props.dispatch({\n        type: 'hideLoader'\n      });\n    }\n  }\n\n  public render() {\n    if (this.props.store.addSubscriptions[0]) {\n      const subscriptionsInfo = this.props.store.addSubscriptions;\n      const renderThis: any = [];\n      subscriptionsInfo.forEach((element: any, indexOfSubscription: number) => {\n        const allUnseenVideoTitles: string[] = [];\n        const allVideoThumbnailLinks: string[] = [];\n        const allVideoLinks: string[] = [];\n        const allVideoUploadTime: string[] = [];\n        element.unseenVideoTitles.forEach((titles: any) => {\n          titles.forEach((title: any) => {\n            allUnseenVideoTitles.push(title);\n          });\n        });\n        element.videoThumbnailLinks.forEach((thumbnailLinks: any) => {\n          thumbnailLinks.forEach((thumbnailLink: any) => {\n            allVideoThumbnailLinks.push(thumbnailLink);\n          });\n        });\n        element.videoLinks.forEach((links: any) => {\n          links.forEach((link: any) => {\n            allVideoLinks.push(link);\n          });\n        });\n        element.videoUploadTime.forEach((uploadTimes: any) => {\n          uploadTimes.forEach((uploadTime: any) => {\n            allVideoUploadTime.push(uploadTime);\n          });\n        });\n\n        const indexesToRemove: any = uniqueIndex(allUnseenVideoTitles);\n\n        console.log(indexesToRemove);\n\n        const uniqueAllUnseenVideoTitles = removeIndexesFromArray(allUnseenVideoTitles, indexesToRemove);\n        const uniqueAllVideoThumbnailLinks = removeIndexesFromArray(allVideoThumbnailLinks, indexesToRemove);\n        const uniqueAllVideoLinks = removeIndexesFromArray(allVideoLinks, indexesToRemove);\n        const uniqueAllVideoUploadTime = removeIndexesFromArray(allVideoUploadTime, indexesToRemove);\n\n        renderThis.push(\n          <TogglingCard\n            togglingFunction={(e: any) => {\n              let nodes = e.target.parentNode.childNodes;\n\n              if (nodes.length === 2) {\n                if (\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius === '' ||\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius === '20px'\n                ) {\n                  nodes[0].childNodes[2].style.transform = 'rotate(180deg)';\n                  console.log(nodes[0].childNodes);\n\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius = '0px';\n                } else {\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius = '20px';\n                  nodes[0].childNodes[2].style.transform = 'rotate(0deg)';\n                }\n              }\n\n              if (nodes.length === 1) {\n                nodes = e.target.parentNode.parentNode.parentNode.childNodes;\n\n                if (\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius === '' ||\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius === '20px'\n                ) {\n                  nodes[0].childNodes[2].style.transform = 'rotate(180deg)';\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius = '0px';\n                } else {\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius = '20px';\n                  nodes[0].childNodes[2].style.transform = 'rotate(0deg)';\n                }\n              }\n\n              if (nodes.length === 3) {\n                nodes = e.target.parentNode.parentNode.childNodes;\n                if (\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius === '' ||\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius === '20px'\n                ) {\n                  nodes[0].childNodes[2].style.transform = 'rotate(180deg)';\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius = '0px';\n                } else {\n                  nodes[0].childNodes[0].style.borderBottomLeftRadius = '20px';\n                  nodes[0].childNodes[2].style.transform = 'rotate(0deg)';\n                }\n              }\n\n              nodes.forEach((node: any) => {\n                node.classList.forEach((className: any) => {\n                  if (className === 'collapsible-card-item-container') {\n                    if (node.style.display === 'none' || node.style.display === '') {\n                      node.style.display = 'block';\n                      node.style.maxHeight = `${node.scrollHeight}px`;\n                    } else {\n                      node.style.display = 'none';\n                      node.style.maxHeight = null;\n                    }\n                  }\n                });\n              });\n            }}\n            title={element.channelName}\n            items={uniqueAllUnseenVideoTitles}\n            channelLogoLink={element.channelLogoLink}\n            deletor={this.videoDeleter}\n            videoThumbnailLinks={uniqueAllVideoThumbnailLinks}\n            videoLinks={uniqueAllVideoLinks}\n            videoUploadTimes={uniqueAllVideoUploadTime}\n            subscriptionPart={indexOfSubscription}\n            key={Math.random()}\n          />\n        );\n      });\n      return renderThis;\n    }\n\n    // here, rather than returning null, we'll return a custom div saying user has no subscription\n    // and instruct user how to add subscription\n    return (\n      <div>\n        Icons made by{' '}\n        <a href=\"https://www.flaticon.com/authors/pixel-perfect\" title=\"Pixel perfect\">\n          Pixel perfect\n        </a>{' '}\n        from{' '}\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n          www.flaticon.com\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import * as React from 'react';\r\nimport './Navbar.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronLeft, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n// faInfoCircle, faCog\r\nimport * as Router from 'react-router-dom';\r\n\r\ninterface INavbarProps {\r\n  return?: boolean;\r\n  location: any;\r\n}\r\n\r\nconst Navbar: React.SFC<INavbarProps> = props => {\r\n  if (props.location.pathname !== `/`) {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"child-one\">\r\n          <Router.Link to=\"/\">\r\n            <FontAwesomeIcon icon={faChevronLeft} />\r\n          </Router.Link>\r\n        </div>\r\n\r\n        <div className=\"child-two\">\r\n          <span>\r\n            <Router.Link to=\"add\">\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Router.Link>\r\n          </span>\r\n          <span>\r\n            <Router.Link to=\"delete\">\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </Router.Link>\r\n          </span>\r\n          {/* <span className=\"willBeAvailableInTheNextUpdate\">\r\n            <Router.Link to=\"settings\">\r\n              <FontAwesomeIcon icon={faCog} />\r\n            </Router.Link>\r\n          </span>\r\n          <span className=\"willBeAvailableInTheNextUpdate\">\r\n            <Router.Link to=\"about\">\r\n              <FontAwesomeIcon icon={faInfoCircle} />\r\n            </Router.Link>\r\n          </span> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"navbar\">\r\n      <span className=\"center-brand\">\r\n        <h1>TubeNotify</h1>\r\n      </span>\r\n      <div className=\"child-two\">\r\n        <span>\r\n          <Router.Link to=\"add\">\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </Router.Link>\r\n        </span>\r\n        <span>\r\n          <Router.Link to=\"delete\">\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </Router.Link>\r\n        </span>\r\n        {/* <span>\r\n          <Router.Link to=\"settings\" className=\"willBeAvailableInTheNextUpdate\">\r\n            <FontAwesomeIcon icon={faCog} />\r\n          </Router.Link>\r\n        </span>\r\n        <span>\r\n          <Router.Link to=\"about\" className=\"willBeAvailableInTheNextUpdate\">\r\n            <FontAwesomeIcon icon={faInfoCircle} />\r\n          </Router.Link>\r\n        </span> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import * as React from 'react';\r\nimport './ErrorMessage.css';\r\nimport Button from '../Button/Button';\r\nimport { faUndoAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport * as Router from 'react-router-dom';\r\n\r\ninterface IErrorMessageProps {\r\n  refToDispatcher?: any;\r\n}\r\n\r\nconst ErrorMessage: React.SFC<IErrorMessageProps> = props => {\r\n  return (\r\n    <div className=\"error\">\r\n      <h1>Something went wrong!</h1>\r\n      <div className=\"error-body\">\r\n        <h5>\r\n          Please check your internet connection and try again. If the problem persists, then it's either a YouTube's API\r\n          server is down or TubeNotify server is down. In that case, the problem will be resolved after a while.\r\n        </h5>\r\n      </div>\r\n      <Router.Link to=\"/add\">\r\n        <Button buttonIcon={faUndoAlt} buttonMessage=\"Retry\" />\r\n      </Router.Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport mapStateToProps from '../../utilities/mapStateToProp';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\r\n\r\nclass ErrorPage extends React.Component<any> {\r\n  constructor(props: any) {\r\n    super(props); // store and route is in the props\r\n    this.props.dispatch({\r\n      type: `hideError`\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return <ErrorMessage />;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ErrorPage);\r\n","import * as React from 'react';\nimport './InfoToggler.css';\n\ninterface IInfoTogglerProps {\n  title: string;\n  imgLink: string;\n  num: number;\n  isSelected: boolean;\n}\n\nconst InfoToggler: React.SFC<IInfoTogglerProps> = props => {\n  let renderElements: any;\n  if (props.isSelected) {\n    // const backgroundColor = '#28d8b5';\n\n    renderElements = (\n      <div\n        className=\"info-card\"\n        id={props.num.toString()}\n        style={{\n          filter: 'blur(4.5px)'\n        }}\n      >\n        <img className=\"card-img\" src={props.imgLink} />\n        <h1 id={props.num.toString()}>{props.title}</h1>\n      </div>\n    );\n  } else {\n    renderElements = (\n      <div className=\"info-card\" id={props.num.toString()}>\n        <img className=\"card-img\" src={props.imgLink} />\n        <h1 id={props.num.toString()}>{props.title}</h1>\n      </div>\n    );\n  }\n  return renderElements;\n};\n\nexport default InfoToggler;\n","function isArraysEqual(arr1: any[], arr2: any[]) {\r\n  if (arr1.length !== arr2.length) {\r\n    return false;\r\n    //tslint:disable\r\n  } else {\r\n    const sortedArr1 = arr1.sort();\r\n    const sortedArr2 = arr2.sort();\r\n    const matchCount: any[] = [];\r\n\r\n    arr1.forEach((val, index) => {\r\n      if (sortedArr1[index] === sortedArr2[index]) {\r\n        matchCount.push(true);\r\n      }\r\n    });\r\n\r\n    if (matchCount.length === arr1.length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default isArraysEqual;\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport mapStateToProps from '../../utilities/mapStateToProp';\r\nimport './Selector.css';\r\nimport Button from '../../components/Button/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowRight, faCheck, faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport InfoToggler from '../../components/InfoToggler/InfoToggler';\r\nimport eraseAll from '../../utilities/eraseAll';\r\nimport { Redirect } from 'react-router';\r\nimport multipleStoreCommits from '../../utilities/multipleStoreCommits';\r\nimport looper from '../../utilities/looper';\r\nimport compareAndKeep from '../../utilities/compareAndKeep';\r\nimport refToDb from '../../utilities/dbOpener';\r\nimport dbReader from '../../utilities/dbReader';\r\nimport dbWriter from '../../utilities/dbWriter';\r\nimport isArraysEqual from '../../utilities/isArraysEqual';\r\n\r\nimport Loading from 'src/components/Loading/Loading';\r\n//tslint:disable\r\nclass Selector extends React.Component<any> {\r\n  constructor(props: any) {\r\n    super(props); // store and route is in the props\r\n    this.helper = this.helper.bind(this);\r\n    this.dbWriteHelper = this.dbWriteHelper.bind(this);\r\n    this.dbReadHelper = this.dbReadHelper.bind(this);\r\n  }\r\n  public componentWillUnmount() {\r\n    this.props.dispatch({\r\n      type: `clearStep`\r\n    });\r\n    this.props.dispatch({\r\n      type: `hideLoader`\r\n    });\r\n    this.props.dispatch({\r\n      type: 'eraseCurrentlySelected'\r\n    });\r\n    eraseAll(this, 'selector');\r\n  }\r\n\r\n  public helper(e: any) {\r\n    console.log(e.target);\r\n\r\n    let num = Number(e.target.id);\r\n\r\n    if (e.target.tagName === 'IMG') {\r\n      num = Number(e.target.parentNode.id);\r\n    }\r\n\r\n    if (e.target.tagName === 'svg') {\r\n      // console.log('SVG detected');\r\n\r\n      num = Number(e.target.parentNode.parentNode.previousSibling.id);\r\n    }\r\n\r\n    if (e.target.tagName === 'path') {\r\n      // console.log('PATH detected');\r\n\r\n      num = Number(e.target.parentNode.parentNode.parentNode.previousSibling.id);\r\n    }\r\n\r\n    if (e.target.tagName === 'DIV' && isNaN(num)) {\r\n      num = Number(e.target.previousSibling.id);\r\n    }\r\n\r\n    if (e.target.tagName === 'H1') {\r\n      if (e.target.id === '') {\r\n        num = Number(e.target.parentNode.previousSibling.id);\r\n        // console.log(num);\r\n      }\r\n    }\r\n    // console.log(num);\r\n\r\n    const numberOfCards = this.props.store.addTitles.length;\r\n    const selectedCount = numberOfCards - num;\r\n\r\n    console.log(selectedCount);\r\n\r\n    this.props.dispatch({\r\n      type: `currentlySelected`,\r\n      number: selectedCount\r\n    });\r\n  }\r\n\r\n  public async dbReadHelper(dbRef: any, objStore: string, channelTag: string) {\r\n    try {\r\n      const db = await dbRef;\r\n      //const res = await dbReader(db, objStore);\r\n      /////////////////////////////\r\n\r\n      const tx = db.transaction(objStore, 'readwrite');\r\n      let data = await tx.store.get(channelTag);\r\n      console.log(data);\r\n\r\n      return data;\r\n      ////////////////////////////\r\n      //console.log(res);\r\n\r\n      //return res;\r\n    } catch (error) {\r\n      this.props.dispatch({\r\n        type: `showError`\r\n      });\r\n    }\r\n  }\r\n\r\n  public async dbWriteHelper(dbRef: any, objStore: string, obj: any) {\r\n    console.log(await dbRef, obj);\r\n\r\n    try {\r\n      const ref = await dbRef;\r\n      await dbWriter(ref, objStore, obj);\r\n    } catch (error) {\r\n      this.props.dispatch({\r\n        type: `showError`\r\n      });\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { addTitles, addThumbnailLinks, currentlySelected } = this.props.store;\r\n    const unselected: number = addTitles.length - currentlySelected - 1;\r\n    const renderThis = addTitles.map((val: string, index: number) => {\r\n      if (unselected > index || unselected === index) {\r\n        return (\r\n          <div\r\n            key={index}\r\n            onClick={e => {\r\n              this.helper(e);\r\n            }}\r\n            className=\"info-toggler-wrapper\"\r\n          >\r\n            <InfoToggler isSelected={false} num={index} title={val} imgLink={addThumbnailLinks[index]} />\r\n          </div>\r\n        );\r\n      }\r\n      return (\r\n        <div\r\n          key={index}\r\n          onClick={e => {\r\n            this.helper(e);\r\n          }}\r\n          className=\"info-toggler-wrapper\"\r\n        >\r\n          <InfoToggler isSelected={true} num={index} title={val} imgLink={addThumbnailLinks[index]} />\r\n          <div\r\n            id=\"hover-selected\"\r\n            onClick={(e: any) => {\r\n              // console.log(e.target.parentNode.previousSibling.childNodes[1]);\r\n              // const ref = e.target.parentNode.previousSibling.childNodes[1];\r\n              // if (ref) {\r\n              //   ref.style.display = 'none';\r\n              //   e.target.parentNode.previousSibling.childNodes[0].style.filter = 'blur(0px)';\r\n              // }\r\n            }}\r\n          >\r\n            <h1>\r\n              <FontAwesomeIcon icon={faCheck} />\r\n              Selected\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const render = (\r\n      <div className=\"selector-container\">\r\n        <h1 className=\"selector-title\">Select the video you have watched recently :</h1>\r\n\r\n        {renderThis}\r\n        <div className=\"selector-btn-container\">\r\n          <span\r\n            className=\"selector-next-btn\"\r\n            onClick={() => {\r\n              this.props.dispatch({\r\n                type: `stepInc`\r\n              });\r\n            }}\r\n          >\r\n            <Button expadedButton={true} buttonMessage=\"Next\" buttonIcon={faArrowRight} />\r\n          </span>\r\n          <span\r\n            className=\"selector-load-more-btn\"\r\n            onClick={async () => {\r\n              const newLink: string = `${this.props.store.requestLink.link}pageToken=${\r\n                this.props.store.requestLink.nextPageToken\r\n              }`;\r\n\r\n              try {\r\n                const secondLinkData = await (await fetch(newLink)).json();\r\n                console.log(secondLinkData);\r\n\r\n                const lookedUpToThisVideoTag =\r\n                  secondLinkData.items[secondLinkData.items.length - 1].snippet.resourceId.videoId;\r\n\r\n                const descriptions: string[] = [];\r\n                const thumbnailLinks: string[] = [];\r\n                const titles: string[] = [];\r\n                const videoIds: string[] = [];\r\n                const videoUploadTime: string[] = [];\r\n\r\n                const videoInfoArray = secondLinkData.items;\r\n                videoInfoArray.forEach((response: any) => {\r\n                  titles.push(response.snippet.title);\r\n                  descriptions.push(response.snippet.description);\r\n                  thumbnailLinks.push(response.snippet.thumbnails.medium.url);\r\n                  videoIds.push(response.snippet.resourceId.videoId);\r\n                  // response.snippet.publishedAt.forEach((videoPublishDate: string) => {\r\n                  //   const date = videoPublishDate.substring(0, 10);\r\n                  //   videoUploadTime.push(date);\r\n                  // });\r\n                  const date = response.snippet.publishedAt.substring(0, 10);\r\n                  videoUploadTime.push(date);\r\n                });\r\n\r\n                ///////////\r\n                const keywords = this.props.store.addKeyword;\r\n                const matchedTitlesIndex = looper(titles, keywords);\r\n                const matchedDescriptionsIndex = looper(descriptions, keywords);\r\n                const uniqueMatchedTitlesIndex = [...new Set(matchedTitlesIndex)];\r\n                const uniqueMatchedDescriptionsIndex = [...new Set(matchedDescriptionsIndex)];\r\n                const combinedUniqueIndexes = [\r\n                  ...new Set([...uniqueMatchedTitlesIndex, ...uniqueMatchedDescriptionsIndex])\r\n                ];\r\n\r\n                const keepTheseTitles: string[] = compareAndKeep({\r\n                  source: titles,\r\n                  toCompareWith: combinedUniqueIndexes\r\n                });\r\n                const keepTheseDescriptions: string[] = compareAndKeep({\r\n                  source: descriptions,\r\n                  toCompareWith: combinedUniqueIndexes\r\n                });\r\n                const keepTheseThumbnailLinks: string[] = compareAndKeep({\r\n                  source: thumbnailLinks,\r\n                  toCompareWith: combinedUniqueIndexes\r\n                });\r\n\r\n                const keepTheseVideoIds: string[] = compareAndKeep({\r\n                  source: videoIds,\r\n                  toCompareWith: combinedUniqueIndexes\r\n                });\r\n\r\n                const keepTheseVideoUploadTime: string[] = compareAndKeep({\r\n                  source: videoUploadTime,\r\n                  toCompareWith: combinedUniqueIndexes\r\n                });\r\n\r\n                this.props.dispatch({\r\n                  type: 'eraseCurrentlySelected'\r\n                });\r\n\r\n                this.props.dispatch({\r\n                  type: 'updateAdditionalInfo',\r\n                  action: {\r\n                    lookedUpToThisVideoTag: lookedUpToThisVideoTag\r\n                  }\r\n                });\r\n\r\n                multipleStoreCommits({\r\n                  refToDispatcher: this.props.dispatch,\r\n                  commitName: `Title`,\r\n                  arrayToCommit: keepTheseTitles\r\n                });\r\n\r\n                multipleStoreCommits({\r\n                  refToDispatcher: this.props.dispatch,\r\n                  commitName: `Description`,\r\n                  arrayToCommit: keepTheseDescriptions\r\n                });\r\n\r\n                multipleStoreCommits({\r\n                  refToDispatcher: this.props.dispatch,\r\n                  commitName: `ThumbnailLink`,\r\n                  arrayToCommit: keepTheseThumbnailLinks\r\n                });\r\n\r\n                this.props.dispatch({\r\n                  type: 'requestLink',\r\n                  link: this.props.store.requestLink.link,\r\n                  nextPageToken: secondLinkData.nextPageToken\r\n                });\r\n\r\n                this.props.dispatch({\r\n                  type: 'addVideoIds',\r\n                  videoIds: keepTheseVideoIds\r\n                });\r\n\r\n                this.props.dispatch({\r\n                  type: 'addVideoPublishDates',\r\n                  dates: keepTheseVideoUploadTime\r\n                });\r\n              } catch (error) {\r\n                this.props.dispatch({\r\n                  type: `showError`\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            <Button expadedButton={true} buttonMessage=\"Load More\" buttonIcon={faAngleDoubleDown} />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (this.props.store.stepCounter === 4) {\r\n      this.props.dispatch({\r\n        type: `stepInc`\r\n      });\r\n      return <Loading />;\r\n    }\r\n\r\n    if (this.props.store.stepCounter === 5) {\r\n      // process the data here and go to the next page by rendering the following line-\r\n      // titles, descriptions, thumbnailLinks, keywords, channelName, channelLogoLink, channelTag, playlistID, lookedUpToThisVideoTag\r\n\r\n      const videoLinks: string[] = [];\r\n\r\n      const currentlySelectedVideos = this.props.store.addVideoIds.slice(this.props.store.currentlySelected * -1);\r\n\r\n      currentlySelectedVideos.forEach((videoId: string) => {\r\n        const link: string = `https://www.youtube.com/watch?v=${videoId}`;\r\n        videoLinks.push(link);\r\n      });\r\n\r\n      const oldSubscription: any = this.dbReadHelper(\r\n        refToDb,\r\n        'subscription',\r\n        this.props.store.addAdditionalInfo.channelTag\r\n      );\r\n      const oldQuery: any = this.dbReadHelper(refToDb, 'query', this.props.store.addAdditionalInfo.channelTag);\r\n\r\n      oldSubscription\r\n        .then((data: any) => {\r\n          if (data) {\r\n            const subscriptionToWrite = {\r\n              channelName: this.props.store.addAdditionalInfo.channelName,\r\n              channelTag: this.props.store.addAdditionalInfo.channelTag,\r\n              channelLogoLink: this.props.store.addAdditionalInfo.channelLogoLink,\r\n              unseenVideoTitles: [\r\n                ...data.unseenVideoTitles,\r\n                this.props.store.addTitles.slice(this.props.store.currentlySelected * -1)\r\n              ],\r\n              videoThumbnailLinks: [\r\n                ...data.videoThumbnailLinks,\r\n                this.props.store.addThumbnailLinks.slice(this.props.store.currentlySelected * -1)\r\n              ],\r\n              videoLinks: [...data.videoLinks, videoLinks],\r\n              videoUploadTime: [\r\n                ...data.videoUploadTime,\r\n                this.props.store.addVideoPublishDates.slice(this.props.store.currentlySelected * -1)\r\n              ]\r\n            };\r\n            this.dbWriteHelper(refToDb, 'subscription', subscriptionToWrite);\r\n          } else {\r\n            const subscriptionToWrite = {\r\n              channelName: this.props.store.addAdditionalInfo.channelName,\r\n              channelTag: this.props.store.addAdditionalInfo.channelTag,\r\n              channelLogoLink: this.props.store.addAdditionalInfo.channelLogoLink,\r\n              unseenVideoTitles: [this.props.store.addTitles.slice(this.props.store.currentlySelected * -1)],\r\n              videoThumbnailLinks: [this.props.store.addThumbnailLinks.slice(this.props.store.currentlySelected * -1)],\r\n              videoLinks: [videoLinks],\r\n              videoUploadTime: [this.props.store.addVideoPublishDates.slice(this.props.store.currentlySelected * -1)]\r\n            };\r\n            this.dbWriteHelper(refToDb, 'subscription', subscriptionToWrite);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.props.dispatch({\r\n            type: `showError`\r\n          });\r\n        });\r\n\r\n      oldQuery\r\n        .then((data: any) => {\r\n          if (data) {\r\n            const queryToWrite = {\r\n              channelTag: this.props.store.addAdditionalInfo.channelTag,\r\n              playlistId: this.props.store.addAdditionalInfo.playlistID,\r\n              details: [\r\n                ...data.details,\r\n                {\r\n                  lookedUpToThisVideoTag: this.props.store.addAdditionalInfo.lookedUpToThisVideoTag,\r\n                  keyWords: this.props.store.addKeyword\r\n                }\r\n              ]\r\n            };\r\n            const oldKeyWords: string[] = [];\r\n            data.details.forEach((info: any) => {\r\n              oldKeyWords.push(info.keyWords);\r\n            });\r\n\r\n            const newKeyWords = this.props.store.addKeyword;\r\n\r\n            oldKeyWords.forEach((val: any) => {\r\n              if (!isArraysEqual(newKeyWords, val)) {\r\n                this.dbWriteHelper(refToDb, 'query', queryToWrite);\r\n              }\r\n            });\r\n\r\n            console.log(oldKeyWords, newKeyWords);\r\n          } else {\r\n            const queryToWrite = {\r\n              channelTag: this.props.store.addAdditionalInfo.channelTag,\r\n              playlistId: this.props.store.addAdditionalInfo.playlistID,\r\n              details: [\r\n                {\r\n                  lookedUpToThisVideoTag: this.props.store.addAdditionalInfo.lookedUpToThisVideoTag,\r\n                  keyWords: this.props.store.addKeyword\r\n                }\r\n              ]\r\n            };\r\n\r\n            this.dbWriteHelper(refToDb, 'query', queryToWrite);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.props.dispatch({\r\n            type: `showError`\r\n          });\r\n        });\r\n\r\n      const oldThumbnailLinksToKeep: any = dbReader(refToDb, 'cache-keep', 1)\r\n        .then(res => {\r\n          console.log(res);\r\n\r\n          let newThumbnailLinksToKeep: string[] = [];\r\n          if (res) {\r\n            newThumbnailLinksToKeep = [\r\n              ...res,\r\n              this.props.store.addThumbnailLinks.slice(this.props.store.currentlySelected * -1)\r\n            ];\r\n          } else {\r\n            newThumbnailLinksToKeep = this.props.store.addThumbnailLinks.slice(this.props.store.currentlySelected * -1);\r\n          }\r\n          this.dbWriteHelper(refToDb, 'cache-keep', {\r\n            id: 1,\r\n            data: newThumbnailLinksToKeep\r\n          });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n\r\n          this.props.dispatch({\r\n            type: `showError`\r\n          });\r\n        });\r\n\r\n      console.log(oldThumbnailLinksToKeep);\r\n\r\n      return <Redirect to=\"/final\" />;\r\n    }\r\n\r\n    return render;\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Selector);\r\n","import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport mapStateToProps from '../../utilities/mapStateToProp';\r\nimport './FinalStep.css';\r\nimport { Redirect } from 'react-router';\r\nimport * as Router from 'react-router-dom';\r\nimport Button from '../../components/Button/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass FinalStep extends React.Component<any> {\r\n  constructor(props: any) {\r\n    super(props); // store and route is in the props\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.props.dispatch({\r\n      type: 'eraseAdditionalInfo'\r\n    });\r\n\r\n    this.props.dispatch({\r\n      type: 'eraseKeywords'\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    console.log(this.props);\r\n\r\n    if (this.props.store.errorToggler) {\r\n      return <Redirect to=\"/error\" />;\r\n    }\r\n\r\n    let wordNodes = '';\r\n    const len = this.props.store.addKeyword.length;\r\n    let singularOrPlural = 'keyword';\r\n    if (len > 1) {\r\n      singularOrPlural = 'keywords';\r\n    }\r\n    this.props.store.addKeyword.forEach((val: string, index: number) => {\r\n      if (index === 0) {\r\n        wordNodes += val;\r\n      } else {\r\n        if (index === len) {\r\n          wordNodes += ` and ${val}`;\r\n        } else {\r\n          wordNodes += `, ${val}`;\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div className=\"final-step\">\r\n        <h1>Congratulations!</h1>\r\n        <div className=\"success-info\">\r\n          <h4>\r\n            Your subscription has been set up for the channel{' '}\r\n            <span>{this.props.store.addAdditionalInfo.channelName}</span> with the {singularOrPlural}:{' '}\r\n            <span>{wordNodes}</span>. You'll get notified when{' '}\r\n            <span>{this.props.store.addAdditionalInfo.channelName}</span> uploads a video with a title that includes the{' '}\r\n            {singularOrPlural}. You will get all the notifications on this device. If you want to get notifications on\r\n            other devices besides this device, then go to <span>Settings</span> and copy the <span>UID</span>. Then,\r\n            open <span>TubeNotify</span> on the other device and navigate to the <span>Settings</span> page and click on{' '}\r\n            <span>Sync Notifications Across Devices</span>. Then type code shown on the other device and press the next\r\n            button. You can connect multiple devices this way to get the same notification across multiple devices. If\r\n            you want to disable this feature, you can do so from <span>Settings</span>.\r\n          </h4>\r\n        </div>\r\n\r\n        <div className=\"warning-info\">\r\n          <h3>\r\n            <FontAwesomeIcon className=\"warning-svg\" icon={faExclamationTriangle} color=\"#f9a825\" />\r\n            Warning\r\n            <FontAwesomeIcon className=\"warning-svg\" icon={faExclamationTriangle} color=\"#f9a825\" />\r\n          </h3>\r\n          <div>\r\n            <h4>\r\n              <em>Please note that: if you deny the notification permission, this app can't send you notifications!</em>\r\n            </h4>\r\n          </div>\r\n        </div>\r\n\r\n        <Router.Link to=\"/\">\r\n          <Button expadedButton={true} buttonMessage=\"Finish\" buttonIcon={faCheck} />\r\n        </Router.Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FinalStep);\r\n","interface IAddKeyword {\r\n  type: string;\r\n  keyword: string;\r\n}\r\n\r\nconst addKeyword = (state = [], action: IAddKeyword) => {\r\n  if (action.type === 'addKeyword') {\r\n    const newState: string[] = [...state];\r\n    newState.push(action.keyword);\r\n    return newState;\r\n  }\r\n  if (action.type === 'eraseKeywords') {\r\n    return [];\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default addKeyword;\r\n","interface IAddTitlesAction {\r\n  type: string;\r\n  Title: string;\r\n}\r\n\r\nconst addTitles = (state = [], action: IAddTitlesAction) => {\r\n  if (action.type === 'addTitles') {\r\n    const newState: string[] = [...state];\r\n    newState.push(action.Title);\r\n    return newState;\r\n  }\r\n  if (action.type === 'eraseTitles') {\r\n    return [];\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default addTitles;\r\n","interface IShowLoaderAction {\r\n  type: string;\r\n  signal: boolean;\r\n}\r\n\r\nconst showLoader = (state = false, action: IShowLoaderAction) => {\r\n  if (action.type === 'showLoader') {\r\n    return true;\r\n  }\r\n  if (action.type === `hideLoader`) {\r\n    return false;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default showLoader;\r\n","interface IStepCounterAction {\r\n  type: string;\r\n}\r\n\r\nconst stepCounter = (state = 0, action: IStepCounterAction) => {\r\n  if (action.type === `stepInc`) {\r\n    const newState = state + 1;\r\n    return newState;\r\n  }\r\n  if (action.type === `clearStep`) {\r\n    return 0;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default stepCounter;\r\n","interface IAddDescriptionsAction {\r\n  type: string;\r\n  Description: string;\r\n}\r\n\r\nconst addDescriptions = (state = [], action: IAddDescriptionsAction) => {\r\n  if (action.type === 'addDescriptions') {\r\n    const newState: string[] = [...state];\r\n    newState.push(action.Description);\r\n    return newState;\r\n  }\r\n\r\n  if (action.type === 'eraseDescriptions') {\r\n    return [];\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default addDescriptions;\r\n","interface IAddThumbnailLinksAction {\r\n  type: string;\r\n  ThumbnailLink: string;\r\n}\r\n\r\nconst addThumbnailLinks = (state = [], action: IAddThumbnailLinksAction) => {\r\n  if (action.type === 'addThumbnailLinks') {\r\n    const newState: string[] = [...state];\r\n    newState.push(action.ThumbnailLink);\r\n    return newState;\r\n  }\r\n\r\n  if (action.type === 'eraseThumbnailLinks') {\r\n    return [];\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default addThumbnailLinks;\r\n","interface IErrorTogglerAction {\r\n  type: string;\r\n  signal: boolean;\r\n}\r\n\r\nconst errorToggler = (state = false, action: IErrorTogglerAction) => {\r\n  if (action.type === 'showError') {\r\n    return true;\r\n  }\r\n  if (action.type === 'hideError') {\r\n    return false;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default errorToggler;\r\n","interface ICurrentlySelectedAction {\r\n  type: string;\r\n  number: number;\r\n}\r\n\r\nconst currentlySelected = (state = 0, action: ICurrentlySelectedAction) => {\r\n  if (action.type === `currentlySelected`) {\r\n    const newState = action.number;\r\n    return newState;\r\n  }\r\n  if (action.type === `eraseCurrentlySelected`) {\r\n    return 0;\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default currentlySelected;\r\n","interface IRequestLink {\r\n  type: string;\r\n  link: string;\r\n  nextPageToken: string;\r\n}\r\n\r\nconst requestLink = (state = {}, action: IRequestLink) => {\r\n  if (action.type === 'requestLink') {\r\n    const newState = {\r\n      link: action.link,\r\n      nextPageToken: action.nextPageToken\r\n    };\r\n    return newState;\r\n  }\r\n  if (action.type === 'eraseRequestLink') {\r\n    return {};\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default requestLink;\r\n","interface IAddAdditionalInfoAction {\r\n  type: string;\r\n  action?: any;\r\n  channelName?: string;\r\n  channelLogoLink?: string;\r\n  channelTag?: string;\r\n  playlistID?: string;\r\n  lookedUpToThisVideoTag?: string;\r\n}\r\n\r\nconst addAdditionalInfo = (state: any = {}, action: IAddAdditionalInfoAction) => {\r\n  if (action.type === 'addAdditionalInfo') {\r\n    if (action.channelName == null) {\r\n      action.channelName = state.channelName;\r\n    }\r\n    if (action.channelLogoLink == null) {\r\n      action.channelLogoLink = state.channelLogoLink;\r\n    }\r\n    if (action.channelTag == null) {\r\n      action.channelTag = state.channelTag;\r\n    }\r\n    if (action.playlistID == null) {\r\n      action.playlistID = state.playlistID;\r\n    }\r\n    if (action.lookedUpToThisVideoTag == null) {\r\n      action.lookedUpToThisVideoTag = state.lookedUpToThisVideoTag;\r\n    }\r\n    const newState = {\r\n      channelName: action.action.channelName,\r\n      channelLogoLink: action.action.channelLogoLink,\r\n      channelTag: action.action.channelTag,\r\n      playlistID: action.action.playlistID,\r\n      lookedUpToThisVideoTag: action.action.lookedUpToThisVideoTag\r\n    };\r\n\r\n    return newState;\r\n  }\r\n  if (action.type === 'updateAdditionalInfo') {\r\n    console.log(state);\r\n\r\n    const newState = {\r\n      ...state,\r\n      lookedUpToThisVideoTag: action.action.lookedUpToThisVideoTag\r\n    };\r\n\r\n    return newState;\r\n  }\r\n  if (action.type === 'eraseAdditionalInfo') {\r\n    return {};\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default addAdditionalInfo;\r\n","interface IAddSubscriptionsAction {\r\n  type: string;\r\n  subscriptions: [];\r\n}\r\n\r\nconst addSubscriptions = (state = [], action: IAddSubscriptionsAction) => {\r\n  if (action.type === 'addSubscriptions') {\r\n    const newState: any = [...state];\r\n    action.subscriptions.forEach(sub => {\r\n      newState.push(sub);\r\n    });\r\n    return newState;\r\n  }\r\n\r\n  if (action.type === 'eraseSubscriptions') {\r\n    return [];\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default addSubscriptions;\r\n","interface IAddVideoPublishDatesAction {\r\n  type: string;\r\n  dates: string[];\r\n}\r\n\r\nconst addVideoPublishDates = (state = [], action: IAddVideoPublishDatesAction) => {\r\n  if (action.type === 'addVideoPublishDates') {\r\n    const newState: string[] = [...state];\r\n    action.dates.forEach(date => {\r\n      newState.push(date);\r\n    });\r\n    return newState;\r\n  }\r\n  if (action.type === 'eraseVideoPublishDates') {\r\n    return [];\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default addVideoPublishDates;\r\n","interface IAddVideoIdsAction {\r\n  type: string;\r\n  videoIds: string[];\r\n}\r\n\r\nconst addVideoIds = (state = [], action: IAddVideoIdsAction) => {\r\n  if (action.type === 'addVideoIds') {\r\n    const newState: string[] = [...state];\r\n    action.videoIds.forEach(videoId => {\r\n      newState.push(videoId);\r\n    });\r\n    return newState;\r\n  }\r\n  if (action.type === 'eraseVideoIds') {\r\n    return [];\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default addVideoIds;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport addKeyword from './modules/addKeyword';\r\nimport addTitles from './modules/addTitles';\r\nimport showLoader from './modules/showLoader';\r\nimport stepCounter from './modules/stepCounter';\r\nimport addDescriptions from './modules/addDescriptions';\r\nimport addThumbnailLinks from './modules/addThumbnailLinks';\r\nimport errorToggler from './modules/errorToggler';\r\nimport currentlySelected from './modules/currentlySelected';\r\nimport requestLink from './modules/requestLink';\r\nimport addAdditionalInfo from './modules/addAdditionalInfo';\r\nimport addSubscriptions from './modules/addSubscriptions';\r\nimport addVideoPublishDates from './modules/addVideoPublishDates';\r\nimport addVideoIds from './modules/addVideoIds';\r\n\r\nconst reducers = combineReducers({\r\n  addAdditionalInfo,\r\n  addDescriptions,\r\n  addKeyword,\r\n  addSubscriptions,\r\n  addThumbnailLinks,\r\n  addTitles,\r\n  addVideoIds,\r\n  addVideoPublishDates,\r\n  currentlySelected,\r\n  errorToggler,\r\n  requestLink,\r\n  showLoader,\r\n  stepCounter\r\n});\r\n\r\nconst Store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default Store;\r\n","// tslint:disable:no-console\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the 'N+1' visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst publicKey = 'BAZTDuUqEH_nPU-HKJlX8rUnriUqtNJ05BvYg4SNM7EVR47cgbDbLfD_nK3bzTDRsKTsD0zvh2KYurPMyqaI-q8';\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport default function register() {\r\n  if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString());\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/custom-service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      // My custom code start\r\n\r\n      //\r\n      let serviceWorker;\r\n      if (registration.installing) {\r\n        serviceWorker = registration.installing;\r\n        // console.log('Service worker installing');\r\n      } else if (registration.waiting) {\r\n        serviceWorker = registration.waiting;\r\n        // console.log('Service worker installed & waiting');\r\n      } else if (registration.active) {\r\n        serviceWorker = registration.active;\r\n        // console.log('Service worker active');\r\n      }\r\n\r\n      if (serviceWorker) {\r\n        console.log('sw current state', serviceWorker.state);\r\n        if (serviceWorker.state === 'activated') {\r\n          // If push subscription wasnt done yet have to do here\r\n          console.log('sw already activated - Do watever needed here');\r\n        }\r\n        serviceWorker.addEventListener('statechange', (e: any) => {\r\n          console.log('sw statechange : ', e.target.state);\r\n          if (e.target.state === 'activated') {\r\n            // use pushManger for subscribing here.\r\n            console.log('Just now activated. now we can subscribe for push notification');\r\n            console.log('start');\r\n            registration.pushManager\r\n              .subscribe({\r\n                userVisibleOnly: true,\r\n                applicationServerKey: urlBase64ToUint8Array(publicKey)\r\n              })\r\n              .then(subscription => {\r\n                console.log(subscription);\r\n\r\n                fetch('api/init', {\r\n                  method: 'POST',\r\n                  body: JSON.stringify(subscription),\r\n                  headers: {\r\n                    'content-type': 'application/json'\r\n                  }\r\n                });\r\n              });\r\n          }\r\n        });\r\n      }\r\n      //\r\n\r\n      // My custom code end\r\n\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a 'New content is\r\n                // available; please refresh.' message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // 'Content is cached for offline use.' message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction urlBase64ToUint8Array(base64String: any) {\r\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\r\n  const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');\r\n\r\n  const rawData = window.atob(base64);\r\n  const outputArray = new Uint8Array(rawData.length);\r\n\r\n  //tslint:disable\r\n  for (let i = 0; i < rawData.length; ++i) {\r\n    outputArray[i] = rawData.charCodeAt(i);\r\n  }\r\n  console.log('end');\r\n  return outputArray;\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\n////////////////////////////////////\r\n\r\n// navigator.serviceWorker.register('', { scope: '/' }).then(\r\n//   (reg: any) => {\r\n//     let serviceWorker;\r\n//     if (reg.installing) {\r\n//       serviceWorker = reg.installing;\r\n//       // console.log('Service worker installing');\r\n//     } else if (reg.waiting) {\r\n//       serviceWorker = reg.waiting;\r\n//       // console.log('Service worker installed & waiting');\r\n//     } else if (reg.active) {\r\n//       serviceWorker = reg.active;\r\n//       // console.log('Service worker active');\r\n//     }\r\n\r\n//     if (serviceWorker) {\r\n//       console.log('sw current state', serviceWorker.state);\r\n//       if (serviceWorker.state === 'activated') {\r\n//         // If push subscription wasnt done yet have to do here\r\n//         console.log('sw already activated - Do watever needed here');\r\n//       }\r\n//       serviceWorker.addEventListener('statechange', (e: any) => {\r\n//         console.log('sw statechange : ', e.target.state);\r\n//         if (e.target.state === 'activated') {\r\n//           // use pushManger for subscribing here.\r\n//           console.log('Just now activated. now we can subscribe for push notification');\r\n//           subscribeForPushNotification(reg);\r\n//         }\r\n//       });\r\n//     }\r\n//   },\r\n//   (err: any) => {\r\n//     console.error('unsuccessful registration with ', '', err);\r\n//   }\r\n// );\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport Add from 'src/pages/Add/Add';\r\nimport Loading from './components/Loading/Loading';\r\nimport Settings from 'src/pages/Settings/Settings';\r\nimport About from 'src/pages/About/About';\r\nimport App from './App';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport ErrorPage from 'src/pages/ErrorPage/ErrorPage';\r\nimport Selector from 'src/pages/Selector/Selector';\r\nimport FinalStep from 'src/pages/FinalStep/FinalStep';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport * as Router from 'react-router-dom';\r\nimport Store from './store';\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={Store}>\r\n    <Router.BrowserRouter>\r\n      <div className=\"main-body\">\r\n        <Router.Route exact={true} component={Navbar} />\r\n        <Router.Route exact={true} path=\"/\" component={App} />\r\n        <Router.Route exact={true} path=\"/add\" component={Add} />\r\n        <Router.Route exact={true} path=\"/delete\" component={Loading} />\r\n        <Router.Route exact={true} path=\"/settings\" component={Settings} />\r\n        <Router.Route exact={true} path=\"/about\" component={About} />\r\n        <Router.Route exact={true} path=\"/error\" component={ErrorPage} />\r\n        <Router.Route exact={true} path=\"/selector\" component={Selector} />\r\n        <Router.Route exact={true} path=\"/final\" component={FinalStep} />\r\n      </div>\r\n    </Router.BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}